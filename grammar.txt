
program           -> extern_list decl_list
                      | decl_list


extern_list       -> extern extern_list'
extern_list'      -> extern extern_list' | eps
extern            -> "extern" type_spec IDENT "(" params ")" ";"
decl_list         -> decl decl_list'
decl_list'        -> decl decl_list' | eps
decl              -> "void" IDENT func_decl | var_type IDENT var_or_func
var_or_func       -> ";" | func_decl
func_decl         -> "(" params ")" block
params            -> param_list | "void" | eps
var_type          -> "int" | "float" | "bool"
param_list        -> param param_list'
param_list'       -> "," param param_list' | eps
param             -> var_type IDENT
stmt              -> expr_stmt | block | if_stmt
                      | while_stmt | return_stmt
return_stmt       -> "return" return_stmt_tail
return_stmt_tail  -> ";" | expr ";"
if_stmt           -> "if" "(" expr ")" block else_stmt
else_stmt         -> "else" block | eps
while_stmt        -> "while" "(" expr ")" stmt
block             -> "{" local_decls stmt_list "}"
local_decls       -> local_decl local_decls | eps
local_decl        -> var_type IDENT ";"
stmt_list         -> stmt stmt_list | eps
expr_stmt         -> expr ";" | ";"
expr              -> IDENT "=" expr | rval
rval              -> rval1
rval1             -> rval2 rval1'
rval1'            -> "||" rval2 rval1' | eps
rval2             -> rval3 rval2'
rval2'            -> "&&" rval3 rval2' | eps
rval3             -> rval4 rval3'
rval3'            -> "==" rval4 rval3' | "!=" rval4 rval3' | eps
rval4             -> rval5 rval4'
rval4'            -> "<=" rval5 rval4' | "<" rval5 rval4'
                      | ">=" rval5 rval4' | ">" rval5 rval4' | eps
rval5             -> rval6 rval5'
rval5'            -> "+" rval6 rval5' | "-" rval6 rval5 | eps
rval6             -> rval7 rval6'
rval6'            -> "*" rval7 rval6' | "/" rval7 rval6'
                      | "%" rval7 rval6' | eps
rval7             -> "-" rval7 | "!" rval7 | "(" expr ")"
                      | IDENT | IDENT "(" args ")" | INT_LIT
                      | FLOAT_LIT | BOOL_LIT
args              -> arg_list | eps
arg_list          -> expr arg_list'
arg_list'         -> "," expr arg_list' | eps
